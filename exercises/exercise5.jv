pipeline Homework5 {
    
    GTFSSampleFeedExtractor -> ZipArchiveInterpreter;
    
    ZipArchiveInterpreter
        -> GTFSFilePicker
        -> GTFSTextFileInterpreter
        -> GTFSCSVInterpreter
        -> GTFSTableInterpreter
        -> GTFSTableRangeTransformer
        -> GTFSLoader;
    
    block GTFSSampleFeedExtractor oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block ZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }
    
    block GTFSFilePicker oftype FilePicker {
        path: "/stops.txt";
    }
    
    block GTFSTextFileInterpreter oftype TextFileInterpreter { }
    
    block GTFSCSVInterpreter oftype CSVInterpreter { }
    
    block GTFSTableInterpreter oftype TableInterpreter {
        header: true;
        columns:[
            "stop_id" oftype integer, 
            "stop_name" oftype text,
            "stop_lat" oftype geographiccoordinates,
            "stop_lon" oftype geographiccoordinates,
            "zone_id " oftype limitedidentifier
    
            
        ];
    }
    
    block ElectricRangeTransformer oftype TableTransformer {
        inputColumns: ["Electric Range"];
        outputColumn: "Electric Range (km)";
        use: MilesToKilometers;
    }
    
    
    valuetype geographiccoordinates oftype float {
        constraints: [Bound];
    }
    
    valuetype limitedidentifier oftype integer {
        constraints: [listofids];
    }
    
    constraint Bound oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: True;
        upperBound: 90;
        upperBoundInclusive: True;
    }
    
    constraint listofids oftype AllowlistConstraint {
        allowlist: [2001];
    }
    
    
    
    
    
    block GTFSLoader oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }
    
    

    

    
    
    
    
    
}
